LOAD CSV WITH HEADERS FROM 'file:///benchmark/1to2.csv' AS line
CREATE (:KP { name: line.Node2, level: 2})

LOAD CSV WITH HEADERS FROM 'file:///benchmark/2to3.csv' AS line
CREATE (:KP { name: line.Node3, level: 3})

LOAD CSV WITH HEADERS FROM 'file:///benchmark/3to4.csv' AS line
CREATE (:KP { name: line.Node4, level: 4})

LOAD CSV WITH HEADERS FROM 'file:///benchmark/4to5.csv' AS line
CREATE (:KP { name: line.Node5, level: 5})

LOAD CSV WITH HEADERS FROM 'file:///benchmark/5to6.csv' AS line
CREATE (:KP { name: line.Node6, level: 6})

match(n{name:'数据库系统'})
delete n

CREATE (n:KP { name: '数据库系统', level:1 })

LOAD CSV  WITH HEADERS FROM "file:///benchmark/1to2.csv" AS line
MATCH (entity1:KP{name:line.Node1,level:1}) , (entity2:KP{name:line.Node2,level:2})
CREATE (entity1)-[:RELATION { relation: line.Relation }]->(entity2)

LOAD CSV  WITH HEADERS FROM "file:///benchmark/2to3.csv" AS line
MATCH (entity1:KP{name:line.Node2,level:2}) , (entity2:KP{name:line.Node3,level:3})
CREATE (entity1)-[:RELATION { relation: line.Relation }]->(entity2)

LOAD CSV  WITH HEADERS FROM "file:///benchmark/3to4.csv" AS line
MATCH (entity1:KP{name:line.Node3,level:3}) , (entity2:KP{name:line.Node4,level:4})
CREATE (entity1)-[:RELATION { relation: line.Relation }]->(entity2)

LOAD CSV  WITH HEADERS FROM "file:///benchmark/4to5.csv" AS line
MATCH (entity1:KP{name:line.Node4,level:4}) , (entity2:KP{name:line.Node5,level:5})
CREATE (entity1)-[:RELATION { relation: line.Relation }]->(entity2)

LOAD CSV  WITH HEADERS FROM "file:///benchmark/5to6.csv" AS line
MATCH (entity1:KP{name:line.Node5,level:5}) , (entity2:KP{name:line.Node6,level:6})
CREATE (entity1)-[:RELATION { relation: line.Relation }]->(entity2)

'''
LOAD CSV  WITH HEADERS FROM "file:///4to5.csv" AS line
MATCH (n:KP{name:line.Node5,level:5})
SET n.contents=line.contents
return entity1
'''


Building test data

LOAD CSV FROM 'file:///test.csv' AS line
MERGE(n:Test{name:line[0]})

LOAD CSV FROM 'file:///test.csv' AS line
MERGE(n:Test{name:line[1]})

LOAD CSV FROM 'file:///test.csv' AS line
match (from:Test{name:line[0]}),(to:Test{name:line[1]})
MERGE (from)-[r:from]-(to)